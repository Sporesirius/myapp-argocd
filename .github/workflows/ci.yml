name: CI

env:
  PNPM_STORE_PATH: ${{github.workspace}}/.pnpm-store
  PNPM_VERSION: latest
  NEXT_DISABLE_SOURCEMAPS: 1
  NEXT_TELEMETRY_DISABLED: 1
  NEXTJS_IGNORE_ESLINT: 1
  NEXTJS_BUILD_TARGET: server

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node: [ 16 ]
        os: [ ubuntu-latest ]
    steps:
      - uses: actions/setup-node@v2.5.0
        with:
          node-version: ${{ matrix.node }}

      - name: checkout code repository
        uses: actions/checkout@v2.4.0
          
      - name: cache pnpm modules
        uses: actions/cache@v2.1.7
        env:
          cache-name: cache-pnpm-modules
        with:
          path: ${{ env.PNPM_STORE_PATH }}
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - uses: pnpm/action-setup@v2.0.1
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: true

      - name: lint
        run: pnpm run lint

      - name: build
        run: pnpm run build

      - name: docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            sporesirius/myapp-argocd
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: set up docker buildx
        uses: docker/setup-buildx-action@v2

      - name: login to registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: build and push docker image to registry
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/myapp-argocd:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/myapp-argocd:buildcache,mode=max

